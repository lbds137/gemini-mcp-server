{
  "permissions": {
    "allow": [
      "Read(*)",
      "Write(*)",
      "Edit(*)",
      "MultiEdit(*)",
      "LS(*)",
      "Glob(*)",
      "Grep(*)",
      "Task(*)",
      "TodoRead",
      "TodoWrite(*)",
      "Batch(*)",
      "Fetch(*)",
      "Search(*)",
      "WebSearch(*)",
      "WebFetch(*)",
      "Bash(echo)",
      "Bash(echo:*)",
      "Bash(md5sum:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(pytest)",
      "Bash(pytest:*)",
      "Bash(python -m pytest:*)",
      "Bash(python3 -m pytest:*)",
      "Bash(pip install:*)",
      "Bash(pip3 install:*)",
      "Bash(python -m pip install:*)",
      "Bash(python3 -m pip install:*)",
      "Bash(pip freeze)",
      "Bash(pip list)",
      "Bash(pip show:*)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(ruff:*)",
      "Bash(pylint:*)",
      "Bash(coverage:*)",
      "Bash(python -m coverage:*)",
      "Bash(python -m black:*)",
      "Bash(python -m flake8:*)",
      "Bash(python -m mypy:*)",
      "Bash(timeout:*)",
      "Bash(time:*)",
      "Bash(git status)",
      "Bash(git diff)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git branch)",
      "Bash(git branch:*)",
      "Bash(git checkout:*)",
      "Bash(git log)",
      "Bash(git clean:*)",
      "Bash(git rm:*)",
      "Bash(git mv:*)",
      "Bash(git push:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(git remote:*)",
      "Bash(git config:*)",
      "Bash(git reset:*)",
      "Bash(git restore:*)",
      "Bash(git stash:*)",
      "Bash(git merge:*)",
      "Bash(git rebase:*)",
      "Bash(git rev-list:*)",
      "Bash(git rev-parse:*)",
      "Bash(git ls-tree:*)",
      "Bash(git cherry-pick:*)",
      "Bash(gh pr create:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr checks:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr merge:*)",
      "Bash(gh pr close:*)",
      "Bash(gh pr edit:*)",
      "Bash(gh pr:*)",
      "Bash(gh api:*)",
      "Bash(gh repo set-default-branch:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh release create:*)",
      "Bash(gh release view:*)",
      "Bash(gh release list:*)",
      "Bash(gh release edit:*)",
      "Bash(gh run view:*)",
      "Bash(gh auth status)",
      "Bash(ls:*)",
      "Bash(pwd:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(awk:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(mkdir:*)",
      "Bash(rmdir:*)",
      "Bash(rm:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(diff:*)",
      "Bash(touch:*)",
      "Bash(curl:*)",
      "Bash(wget:*)",
      "Bash(sed:*)",
      "Bash(tar:*)",
      "Bash(tree:*)",
      "Bash(realpath:*)",
      "Bash(chmod:*)",
      "Bash(kill:*)",
      "Bash(pkill:*)",
      "Bash(ps:*)",
      "Bash(date)",
      "Bash(date:*)",
      "Bash(stat:*)",
      "Bash(./scripts/*.sh:*)",
      "Bash(bash:*)",
      "Bash(source:*)",
      "Bash(export:*)",
      "Bash(claude --version)",
      "Bash(claude mcp:*)",
      "Bash(which python)",
      "Bash(which python3)",
      "Bash(python --version)",
      "Bash(python3 --version)",
      "Bash(pip --version)",
      "Bash(pip3 --version)",
      "Bash(env)",
      "Bash(printenv:*)",
      "Bash(true)",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(done)",
      "mcp__ide__getDiagnostics",
      "mcp__gemini-collab__server_info",
      "mcp__gemini-collab__ask_gemini",
      "mcp__gemini-collab__gemini_brainstorm",
      "mcp__gemini-collab__gemini_code_review",
      "mcp__gemini-collab__gemini_test_cases",
      "mcp__gemini-collab__gemini_explain",
      "WebFetch(domain:docs.github.com)",
      "WebFetch(domain:api.github.com)",
      "WebFetch(domain:ai.google.dev)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:pypi.org)",
      "WebFetch(domain:docs.python.org)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}